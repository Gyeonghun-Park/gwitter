{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Gweet.js","components/GweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebase","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Gweet","gweetObj","isOwner","editing","setEditing","text","newGweet","setNewGweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","class","faTrash","faPencilAlt","GweetFactory","userObj","gweet","setGweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","gweets","setGweets","useEffect","onSnapshot","snapshot","gweetArray","docs","map","data","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11982278.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"../fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport { authService, firebaseInstance } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Gweet = ({ gweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newGweet, setNewGweet] = useState(gweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this gweet?\");\n    if (ok) {\n      await dbService.doc(`gweets/${gweetObj.id}`).delete();\n      await storageService.refFromURL(gweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`gweets/${gweetObj.id}`).update({\n      text: newGweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewGweet(value);\n  };\n  return (\n    <div className=\"gweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container gweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your gweet\"\n              value={newGweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Gweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{gweetObj.text}</h4>\n          {gweetObj.attachmentUrl && (\n            <img src={gweetObj.attachmentUrl} alt=\"gweet\" />\n          )}\n          {isOwner && (\n            <div class=\"gweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Gweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst GweetFactory = ({ userObj }) => {\n  const [gweet, setGweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (gweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const gweetObj = {\n      text: gweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"gweets\").add(gweetObj);\n    setGweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setGweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={gweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      <input type=\"submit\" value=\"gweet\" />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"gweet\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default GweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"../fbase\";\nimport Gweet from \"../components/Gweet\";\nimport GweetFactory from \"../components/GweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [gweets, setGweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"gweets\").onSnapshot((snapshot) => {\n      const gweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setGweets(gweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <GweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {gweets.map((gweet) => (\n          <Gweet\n            key={gweet.id}\n            gweetObj={gweet}\n            isOwner={gweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"../fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}'s Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer className=\"footer\">\n        &copy; {new Date().getFullYear()} Gwitter\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}